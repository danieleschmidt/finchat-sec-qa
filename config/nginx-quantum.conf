# Terragon Quantum Load Balancer Configuration
# High-performance Nginx configuration for quantum API load balancing
# Optimized for financial data processing with sub-100ms latency

worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format for quantum processing
    log_format quantum_log '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'rt=$request_time uct="$upstream_connect_time" '
                          'uht="$upstream_header_time" urt="$upstream_response_time" '
                          'quantum_id="$http_x_quantum_request_id"';
    
    access_log /var/log/nginx/access.log quantum_log;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # Buffer sizes for large financial documents
    client_body_buffer_size 128k;
    client_max_body_size 10M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Compression for API responses
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting for DDoS protection
    limit_req_zone $binary_remote_addr zone=quantum_api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=quantum_upload:10m rate=10r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=quantum_conn:10m;
    
    # SSL/TLS Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Quantum API upstream servers
    upstream quantum_api {
        least_conn;
        server quantum-api-primary:8080 weight=3 max_fails=3 fail_timeout=30s;
        server quantum-api-secondary:8080 weight=2 max_fails=3 fail_timeout=30s;
        
        # Health check
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # Quantum WebApp upstream
    upstream quantum_webapp {
        server quantum-webapp:5000 weight=1 max_fails=2 fail_timeout=30s;
        keepalive 16;
    }
    
    # Main server configuration
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS server for production
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name quantum.terragon.ai;
        
        # SSL certificates (replace with your actual certificates)
        ssl_certificate /etc/nginx/certs/quantum.crt;
        ssl_certificate_key /etc/nginx/certs/quantum.key;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
        
        # Rate limiting
        limit_req zone=quantum_api burst=20 nodelay;
        limit_conn quantum_conn 10;
        
        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://quantum_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Quantum API endpoints
        location /api/ {
            # Enhanced rate limiting for API endpoints
            limit_req zone=quantum_api burst=50 nodelay;
            
            proxy_pass http://quantum_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Quantum-Request-ID $request_id;
            
            # Timeouts optimized for quantum processing
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Caching for GET requests
            proxy_cache_bypass $http_upgrade;
            proxy_no_cache $http_upgrade;
            
            # Enable compression
            gzip_proxied any;
        }
        
        # Streaming endpoints with special handling
        location /stream/ {
            proxy_pass http://quantum_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Streaming optimizations
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # File upload endpoints
        location /upload/ {
            limit_req zone=quantum_upload burst=5 nodelay;
            client_max_body_size 50M;
            
            proxy_pass http://quantum_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            proxy_request_buffering off;
        }
        
        # Metrics endpoint for monitoring
        location /metrics {
            access_log off;
            allow 172.20.0.0/16;  # Only allow internal network
            deny all;
            
            proxy_pass http://quantum_api;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
        }
        
        # Web application
        location / {
            proxy_pass http://quantum_webapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Static files with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2|woff|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Static-File "true";
            
            # Try webapp first, then API
            try_files $uri @webapp;
        }
        
        location @webapp {
            proxy_pass http://quantum_webapp;
            proxy_set_header Host $host;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # Internal monitoring server
    server {
        listen 8080;
        server_name localhost;
        access_log off;
        
        # Nginx status
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            allow 172.20.0.0/16;
            deny all;
        }
        
        # Health check
        location /health {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# Stream configuration for TCP/UDP load balancing
stream {
    # Quantum data stream processing
    upstream quantum_stream {
        server quantum-api-primary:8081;
        server quantum-api-secondary:8081;
    }
    
    server {
        listen 8081;
        proxy_pass quantum_stream;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/stream.log;
    }
}