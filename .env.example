# FinChat SEC QA Configuration Template
# Copy this file to .env and set your actual values

# ============================================================================
# REQUIRED CONFIGURATION
# ============================================================================

# Application Authentication Token
# Generate with: python3 -c "import secrets; print(secrets.token_urlsafe(32))"
FINCHAT_TOKEN=your-secure-token-here

# EDGAR API User Agent (REQUIRED by SEC)
# Format: "Company Application email@domain.com"
FINCHAT_USER_AGENT=YourCompany FinChatApp your.email@company.com

# Logging Level (DEBUG, INFO, WARNING, ERROR)
FINCHAT_LOG_LEVEL=INFO

# ============================================================================
# OPTIONAL CONFIGURATION
# ============================================================================

# Rate Limiting Configuration
FINCHAT_RATE_LIMIT_MAX_REQUESTS=10
FINCHAT_RATE_LIMIT_WINDOW_SECONDS=1
FINCHAT_RATE_LIMIT_MAX_FALLBACK_CACHE_SIZE=10000

# Redis Configuration (for distributed rate limiting)
# Leave empty to use in-memory fallback
FINCHAT_REDIS_URL=redis://localhost:6379/0
FINCHAT_REDIS_POOL_MAX_CONNECTIONS=20

# Performance Configuration
FINCHAT_CHUNK_SIZE=1000
FINCHAT_CHUNK_OVERLAP=200

# Security Configuration
FINCHAT_SECRETS_PROVIDER=local
FINCHAT_SECRETS_CACHE_TTL=300
FINCHAT_HSTS_MAX_AGE=31536000
FINCHAT_XSS_PROTECTION_MODE=1; mode=block

# CORS Configuration (comma-separated origins)
FINCHAT_CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# Request Limits
FINCHAT_MAX_REQUEST_SIZE_MB=10
FINCHAT_CSRF_TOKEN_EXPIRY_MINUTES=60

# Exponential Backoff Configuration
FINCHAT_EXPONENTIAL_BACKOFF_BASE=2
FINCHAT_EXPONENTIAL_BACKOFF_UNIT_SECONDS=1

# ============================================================================
# EXTERNAL SERVICES (OPTIONAL)
# ============================================================================

# OpenAI Configuration (for enhanced Q&A)
# OPENAI_API_KEY=your-openai-api-key-here
# FINCHAT_OPENAI_MODEL=gpt-3.5-turbo

# AWS Secrets Manager (if using aws secrets provider)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_DEFAULT_REGION=us-east-1

# HashiCorp Vault (if using vault secrets provider)
# VAULT_URL=https://vault.example.com
# VAULT_TOKEN=your-vault-token

# ============================================================================
# DEVELOPMENT/TESTING
# ============================================================================

# Development Mode Settings
# FINCHAT_LOG_LEVEL=DEBUG
# FINCHAT_METRICS_ENABLED=true
ENVIRONMENT=development

# Testing Configuration
# FINCHAT_TEST_MODE=true
# FINCHAT_SKIP_REDIS_TESTS=true
# FINCHAT_SKIP_DOCKER_TESTS=true
TEST_COVERAGE_THRESHOLD=85
PYTEST_ARGS=--cov=src --cov-report=html --cov-report=term

# Pre-commit Configuration
PRE_COMMIT_ENABLED=true
BLACK_LINE_LENGTH=88
ISORT_PROFILE=black

# CI/CD Configuration
GITHUB_TOKEN=your_github_token_here
DOCKER_REGISTRY=ghcr.io
SEMANTIC_RELEASE_VERSION=19.0.4

# ============================================================================
# MONITORING AND METRICS
# ============================================================================

# Prometheus Metrics
FINCHAT_METRICS_ENABLED=true
FINCHAT_PROMETHEUS_PORT=8000

# Health Check Configuration
FINCHAT_HEALTH_CHECK_TIMEOUT=5

# ============================================================================
# NOTES
# ============================================================================
#
# 1. Security: Never commit this file with real credentials
# 2. SEC Requirements: User Agent is mandatory for EDGAR API access
# 3. Rate Limits: SEC allows maximum 10 requests per second
# 4. Redis: Optional but recommended for production deployments
# 5. Tokens: Use cryptographically secure random tokens in production
#
# For detailed setup instructions, see docs/setup.md
# For deployment guides, see docs/DOCKER_DEPLOYMENT.md